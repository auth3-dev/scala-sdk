// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dev.auth3.identity.admin.admin

@SerialVersionUID(0L)
final case class GetAddressesResponse(
    addresses: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetAddressesResponse.Address] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetAddressesResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      addresses.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      addresses.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def clearAddresses = copy(addresses = _root_.scala.Seq.empty)
    def addAddresses(__vs: dev.auth3.identity.admin.admin.GetAddressesResponse.Address *): GetAddressesResponse = addAllAddresses(__vs)
    def addAllAddresses(__vs: Iterable[dev.auth3.identity.admin.admin.GetAddressesResponse.Address]): GetAddressesResponse = copy(addresses = addresses ++ __vs)
    def withAddresses(__v: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetAddressesResponse.Address]): GetAddressesResponse = copy(addresses = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => addresses
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(addresses.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: dev.auth3.identity.admin.admin.GetAddressesResponse.type = dev.auth3.identity.admin.admin.GetAddressesResponse
    // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetAddressesResponse])
}

object GetAddressesResponse extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetAddressesResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetAddressesResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetAddressesResponse = {
    val __addresses: _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GetAddressesResponse.Address] = new _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GetAddressesResponse.Address]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __addresses += _root_.scalapb.LiteParser.readMessage[dev.auth3.identity.admin.admin.GetAddressesResponse.Address](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    dev.auth3.identity.admin.admin.GetAddressesResponse(
        addresses = __addresses.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetAddressesResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      dev.auth3.identity.admin.admin.GetAddressesResponse(
        addresses = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[dev.auth3.identity.admin.admin.GetAddressesResponse.Address]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(33)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(33)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = dev.auth3.identity.admin.admin.GetAddressesResponse.Address
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.dev.auth3.identity.admin.admin.GetAddressesResponse.Address
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = dev.auth3.identity.admin.admin.GetAddressesResponse(
    addresses = _root_.scala.Seq.empty
  )
  @SerialVersionUID(0L)
  final case class Address(
      id: _root_.scala.Predef.String = "",
      identityId: _root_.scala.Predef.String = "",
      name: _root_.scala.Predef.String = "",
      address: _root_.scala.Predef.String = "",
      verified: _root_.scala.Boolean = false,
      idSchemaKey: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Address] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = id
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = identityId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = name
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        
        {
          val __value = address
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
          }
        };
        
        {
          val __value = verified
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
          }
        };
        
        {
          val __value = idSchemaKey
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = id
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = identityId
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = name
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        {
          val __v = address
          if (!__v.isEmpty) {
            _output__.writeString(4, __v)
          }
        };
        {
          val __v = verified
          if (__v != false) {
            _output__.writeBool(5, __v)
          }
        };
        {
          val __v = idSchemaKey
          if (!__v.isEmpty) {
            _output__.writeString(6, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withId(__v: _root_.scala.Predef.String): Address = copy(id = __v)
      def withIdentityId(__v: _root_.scala.Predef.String): Address = copy(identityId = __v)
      def withName(__v: _root_.scala.Predef.String): Address = copy(name = __v)
      def withAddress(__v: _root_.scala.Predef.String): Address = copy(address = __v)
      def withVerified(__v: _root_.scala.Boolean): Address = copy(verified = __v)
      def withIdSchemaKey(__v: _root_.scala.Predef.String): Address = copy(idSchemaKey = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = id
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = identityId
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 4 => {
            val __t = address
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = verified
            if (__t != false) __t else null
          }
          case 6 => {
            val __t = idSchemaKey
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(id)
          case 2 => _root_.scalapb.descriptors.PString(identityId)
          case 3 => _root_.scalapb.descriptors.PString(name)
          case 4 => _root_.scalapb.descriptors.PString(address)
          case 5 => _root_.scalapb.descriptors.PBoolean(verified)
          case 6 => _root_.scalapb.descriptors.PString(idSchemaKey)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: dev.auth3.identity.admin.admin.GetAddressesResponse.Address.type = dev.auth3.identity.admin.admin.GetAddressesResponse.Address
      // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address])
  }
  
  object Address extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetAddressesResponse.Address] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetAddressesResponse.Address] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetAddressesResponse.Address = {
      var __id: _root_.scala.Predef.String = ""
      var __identityId: _root_.scala.Predef.String = ""
      var __name: _root_.scala.Predef.String = ""
      var __address: _root_.scala.Predef.String = ""
      var __verified: _root_.scala.Boolean = false
      var __idSchemaKey: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __id = _input__.readStringRequireUtf8()
          case 18 =>
            __identityId = _input__.readStringRequireUtf8()
          case 26 =>
            __name = _input__.readStringRequireUtf8()
          case 34 =>
            __address = _input__.readStringRequireUtf8()
          case 40 =>
            __verified = _input__.readBool()
          case 50 =>
            __idSchemaKey = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      dev.auth3.identity.admin.admin.GetAddressesResponse.Address(
          id = __id,
          identityId = __identityId,
          name = __name,
          address = __address,
          verified = __verified,
          idSchemaKey = __idSchemaKey,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetAddressesResponse.Address] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        dev.auth3.identity.admin.admin.GetAddressesResponse.Address(
          id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          identityId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          address = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          verified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
          idSchemaKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = dev.auth3.identity.admin.admin.GetAddressesResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = dev.auth3.identity.admin.admin.GetAddressesResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = dev.auth3.identity.admin.admin.GetAddressesResponse.Address(
      id = "",
      identityId = "",
      name = "",
      address = "",
      verified = false,
      idSchemaKey = ""
    )
    implicit class AddressLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetAddressesResponse.Address]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetAddressesResponse.Address](_l) {
      def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def identityId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.identityId)((c_, f_) => c_.copy(identityId = f_))
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def address: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.address)((c_, f_) => c_.copy(address = f_))
      def verified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.verified)((c_, f_) => c_.copy(verified = f_))
      def idSchemaKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.idSchemaKey)((c_, f_) => c_.copy(idSchemaKey = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val IDENTITY_ID_FIELD_NUMBER = 2
    final val NAME_FIELD_NUMBER = 3
    final val ADDRESS_FIELD_NUMBER = 4
    final val VERIFIED_FIELD_NUMBER = 5
    final val ID_SCHEMA_KEY_FIELD_NUMBER = 6
    def of(
      id: _root_.scala.Predef.String,
      identityId: _root_.scala.Predef.String,
      name: _root_.scala.Predef.String,
      address: _root_.scala.Predef.String,
      verified: _root_.scala.Boolean,
      idSchemaKey: _root_.scala.Predef.String
    ): _root_.dev.auth3.identity.admin.admin.GetAddressesResponse.Address = _root_.dev.auth3.identity.admin.admin.GetAddressesResponse.Address(
      id,
      identityId,
      name,
      address,
      verified,
      idSchemaKey
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetAddressesResponse.Address])
  }
  
  implicit class GetAddressesResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetAddressesResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetAddressesResponse](_l) {
    def addresses: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[dev.auth3.identity.admin.admin.GetAddressesResponse.Address]] = field(_.addresses)((c_, f_) => c_.copy(addresses = f_))
  }
  final val ADDRESSES_FIELD_NUMBER = 1
  def of(
    addresses: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetAddressesResponse.Address]
  ): _root_.dev.auth3.identity.admin.admin.GetAddressesResponse = _root_.dev.auth3.identity.admin.admin.GetAddressesResponse(
    addresses
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetAddressesResponse])
}
