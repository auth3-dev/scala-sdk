// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dev.auth3.identity.admin.admin

@SerialVersionUID(0L)
final case class GetIdentityByIdentifierResponse(
    identity: _root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetIdentityByIdentifierResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (identity.isDefined) {
        val __value = identity.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      identity.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getIdentity: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity = identity.getOrElse(dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.defaultInstance)
    def clearIdentity: GetIdentityByIdentifierResponse = copy(identity = _root_.scala.None)
    def withIdentity(__v: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity): GetIdentityByIdentifierResponse = copy(identity = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => identity.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => identity.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.type = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse
    // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse])
}

object GetIdentityByIdentifierResponse extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse = {
    var __identity: _root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __identity = Option(__identity.fold(_root_.scalapb.LiteParser.readMessage[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse(
        identity = __identity,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse(
        identity = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse(
    identity = _root_.scala.None
  )
  @SerialVersionUID(0L)
  final case class Identity(
      identityId: _root_.scala.Predef.String = "",
      createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      updatedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      mainIdentifier: _root_.scala.Predef.String = "",
      traitsId: _root_.scala.Predef.String = "",
      addressesIds: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
      credentialsIds: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
      schemaId: _root_.scala.Predef.String = "",
      lock: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.UNLOCKED,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Identity] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = identityId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (createdAt.isDefined) {
          val __value = createdAt.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (updatedAt.isDefined) {
          val __value = updatedAt.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        
        {
          val __value = mainIdentifier
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
          }
        };
        
        {
          val __value = traitsId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
          }
        };
        addressesIds.foreach { __item =>
          val __value = __item
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
        credentialsIds.foreach { __item =>
          val __value = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity._typemapper_credentialsIds.toBase(__item)
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        
        {
          val __value = schemaId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
          }
        };
        
        {
          val __value = lock.value
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(9, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = identityId
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        createdAt.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        updatedAt.foreach { __v =>
          val __m = __v
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        {
          val __v = mainIdentifier
          if (!__v.isEmpty) {
            _output__.writeString(4, __v)
          }
        };
        {
          val __v = traitsId
          if (!__v.isEmpty) {
            _output__.writeString(5, __v)
          }
        };
        addressesIds.foreach { __v =>
          val __m = __v
          _output__.writeString(6, __m)
        };
        credentialsIds.foreach { __v =>
          val __m = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity._typemapper_credentialsIds.toBase(__v)
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        {
          val __v = schemaId
          if (!__v.isEmpty) {
            _output__.writeString(8, __v)
          }
        };
        {
          val __v = lock.value
          if (__v != 0) {
            _output__.writeEnum(9, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withIdentityId(__v: _root_.scala.Predef.String): Identity = copy(identityId = __v)
      def getCreatedAt: com.google.protobuf.timestamp.Timestamp = createdAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearCreatedAt: Identity = copy(createdAt = _root_.scala.None)
      def withCreatedAt(__v: com.google.protobuf.timestamp.Timestamp): Identity = copy(createdAt = Option(__v))
      def getUpdatedAt: com.google.protobuf.timestamp.Timestamp = updatedAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearUpdatedAt: Identity = copy(updatedAt = _root_.scala.None)
      def withUpdatedAt(__v: com.google.protobuf.timestamp.Timestamp): Identity = copy(updatedAt = Option(__v))
      def withMainIdentifier(__v: _root_.scala.Predef.String): Identity = copy(mainIdentifier = __v)
      def withTraitsId(__v: _root_.scala.Predef.String): Identity = copy(traitsId = __v)
      def clearAddressesIds = copy(addressesIds = _root_.scala.Seq.empty)
      def addAddressesIds(__vs: _root_.scala.Predef.String *): Identity = addAllAddressesIds(__vs)
      def addAllAddressesIds(__vs: Iterable[_root_.scala.Predef.String]): Identity = copy(addressesIds = addressesIds ++ __vs)
      def withAddressesIds(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Identity = copy(addressesIds = __v)
      def clearCredentialsIds = copy(credentialsIds = _root_.scala.collection.immutable.Map.empty)
      def addCredentialsIds(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): Identity = addAllCredentialsIds(__vs)
      def addAllCredentialsIds(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): Identity = copy(credentialsIds = credentialsIds ++ __vs)
      def withCredentialsIds(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): Identity = copy(credentialsIds = __v)
      def withSchemaId(__v: _root_.scala.Predef.String): Identity = copy(schemaId = __v)
      def withLock(__v: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock): Identity = copy(lock = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = identityId
            if (__t != "") __t else null
          }
          case 2 => createdAt.orNull
          case 3 => updatedAt.orNull
          case 4 => {
            val __t = mainIdentifier
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = traitsId
            if (__t != "") __t else null
          }
          case 6 => addressesIds
          case 7 => credentialsIds.iterator.map(dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity._typemapper_credentialsIds.toBase(_)).toSeq
          case 8 => {
            val __t = schemaId
            if (__t != "") __t else null
          }
          case 9 => {
            val __t = lock.javaValueDescriptor
            if (__t.getNumber() != 0) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(identityId)
          case 2 => createdAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => updatedAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => _root_.scalapb.descriptors.PString(mainIdentifier)
          case 5 => _root_.scalapb.descriptors.PString(traitsId)
          case 6 => _root_.scalapb.descriptors.PRepeated(addressesIds.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
          case 7 => _root_.scalapb.descriptors.PRepeated(credentialsIds.iterator.map(dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity._typemapper_credentialsIds.toBase(_).toPMessage).toVector)
          case 8 => _root_.scalapb.descriptors.PString(schemaId)
          case 9 => _root_.scalapb.descriptors.PEnum(lock.scalaValueDescriptor)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.type = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity
      // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity])
  }
  
  object Identity extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity = {
      var __identityId: _root_.scala.Predef.String = ""
      var __createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var __updatedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var __mainIdentifier: _root_.scala.Predef.String = ""
      var __traitsId: _root_.scala.Predef.String = ""
      val __addressesIds: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
      val __credentialsIds: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
      var __schemaId: _root_.scala.Predef.String = ""
      var __lock: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.UNLOCKED
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __identityId = _input__.readStringRequireUtf8()
          case 18 =>
            __createdAt = Option(__createdAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 26 =>
            __updatedAt = Option(__updatedAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 34 =>
            __mainIdentifier = _input__.readStringRequireUtf8()
          case 42 =>
            __traitsId = _input__.readStringRequireUtf8()
          case 50 =>
            __addressesIds += _input__.readStringRequireUtf8()
          case 58 =>
            __credentialsIds += dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity._typemapper_credentialsIds.toCustom(_root_.scalapb.LiteParser.readMessage[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry](_input__))
          case 66 =>
            __schemaId = _input__.readStringRequireUtf8()
          case 72 =>
            __lock = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.fromValue(_input__.readEnum())
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity(
          identityId = __identityId,
          createdAt = __createdAt,
          updatedAt = __updatedAt,
          mainIdentifier = __mainIdentifier,
          traitsId = __traitsId,
          addressesIds = __addressesIds.result(),
          credentialsIds = __credentialsIds.result(),
          schemaId = __schemaId,
          lock = __lock,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity(
          identityId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          createdAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
          updatedAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
          mainIdentifier = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          traitsId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          addressesIds = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
          credentialsIds = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity._typemapper_credentialsIds.toCustom(_)).toMap,
          schemaId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          lock = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.UNLOCKED.scalaValueDescriptor).number)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = com.google.protobuf.timestamp.Timestamp
        case 3 => __out = com.google.protobuf.timestamp.Timestamp
        case 7 => __out = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
      Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
        _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry
      )
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 9 => dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock
      }
    }
    lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity(
      identityId = "",
      createdAt = _root_.scala.None,
      updatedAt = _root_.scala.None,
      mainIdentifier = "",
      traitsId = "",
      addressesIds = _root_.scala.Seq.empty,
      credentialsIds = _root_.scala.collection.immutable.Map.empty,
      schemaId = "",
      lock = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.UNLOCKED
    )
    sealed abstract class Lock(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
      type EnumType = Lock
      def isUnlocked: _root_.scala.Boolean = false
      def isAdminLocked: _root_.scala.Boolean = false
      def companion: _root_.scalapb.GeneratedEnumCompanion[Lock] = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock
      final def asRecognized: _root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock.Recognized])
    }
    
    object Lock extends _root_.scalapb.GeneratedEnumCompanion[Lock] {
      sealed trait Recognized extends Lock
      implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Lock] = this
      
      @SerialVersionUID(0L)
      case object UNLOCKED extends Lock(0) with Lock.Recognized {
        val index = 0
        val name = "UNLOCKED"
        override def isUnlocked: _root_.scala.Boolean = true
      }
      
      @SerialVersionUID(0L)
      case object ADMIN_LOCKED extends Lock(1) with Lock.Recognized {
        val index = 1
        val name = "ADMIN_LOCKED"
        override def isAdminLocked: _root_.scala.Boolean = true
      }
      
      @SerialVersionUID(0L)
      final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Lock(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
      lazy val values = scala.collection.immutable.Seq(UNLOCKED, ADMIN_LOCKED)
      def fromValue(__value: _root_.scala.Int): Lock = __value match {
        case 0 => UNLOCKED
        case 1 => ADMIN_LOCKED
        case __other => Unrecognized(__other)
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.javaDescriptor.getEnumTypes().get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.scalaDescriptor.enums(0)
    }
    @SerialVersionUID(0L)
    final case class CredentialsIdsEntry(
        key: _root_.scala.Predef.String = "",
        value: _root_.scala.Predef.String = "",
        unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
        ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CredentialsIdsEntry] {
        @transient
        private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
        private[this] def __computeSerializedSize(): _root_.scala.Int = {
          var __size = 0
          
          {
            val __value = key
            if (!__value.isEmpty) {
              __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
            }
          };
          
          {
            val __value = value
            if (!__value.isEmpty) {
              __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
            }
          };
          __size += unknownFields.serializedSize
          __size
        }
        override def serializedSize: _root_.scala.Int = {
          var __size = __serializedSizeMemoized
          if (__size == 0) {
            __size = __computeSerializedSize() + 1
            __serializedSizeMemoized = __size
          }
          __size - 1
          
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
          {
            val __v = key
            if (!__v.isEmpty) {
              _output__.writeString(1, __v)
            }
          };
          {
            val __v = value
            if (!__v.isEmpty) {
              _output__.writeString(2, __v)
            }
          };
          unknownFields.writeTo(_output__)
        }
        def withKey(__v: _root_.scala.Predef.String): CredentialsIdsEntry = copy(key = __v)
        def withValue(__v: _root_.scala.Predef.String): CredentialsIdsEntry = copy(value = __v)
        def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
        def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
        def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => {
              val __t = key
              if (__t != "") __t else null
            }
            case 2 => {
              val __t = value
              if (__t != "") __t else null
            }
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PString(key)
            case 2 => _root_.scalapb.descriptors.PString(value)
          }
        }
        def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
        def companion: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry.type = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry
        // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry])
    }
    
    object CredentialsIdsEntry extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry] {
      implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry] = this
      def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry = {
        var __key: _root_.scala.Predef.String = ""
        var __value: _root_.scala.Predef.String = ""
        var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __key = _input__.readStringRequireUtf8()
            case 18 =>
              __value = _input__.readStringRequireUtf8()
            case tag =>
              if (_unknownFields__ == null) {
                _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
              }
              _unknownFields__.parseField(tag, _input__)
          }
        }
        dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry(
            key = __key,
            value = __value,
            unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
          dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry(
            key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
            value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.javaDescriptor.getNestedTypes().get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
      lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
      def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry(
        key = "",
        value = ""
      )
      implicit class CredentialsIdsEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry](_l) {
        def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
        def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
      }
      final val KEY_FIELD_NUMBER = 1
      final val VALUE_FIELD_NUMBER = 2
      @transient
      implicit val keyValueMapper: _root_.scalapb.TypeMapper[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
        _root_.scalapb.TypeMapper[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry(__p._1, __p._2))
      def of(
        key: _root_.scala.Predef.String,
        value: _root_.scala.Predef.String
      ): _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry = _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry(
        key,
        value
      )
      // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry])
    }
    
    implicit class IdentityLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity](_l) {
      def identityId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.identityId)((c_, f_) => c_.copy(identityId = f_))
      def createdAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getCreatedAt)((c_, f_) => c_.copy(createdAt = Option(f_)))
      def optionalCreatedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.createdAt)((c_, f_) => c_.copy(createdAt = f_))
      def updatedAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getUpdatedAt)((c_, f_) => c_.copy(updatedAt = Option(f_)))
      def optionalUpdatedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.updatedAt)((c_, f_) => c_.copy(updatedAt = f_))
      def mainIdentifier: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.mainIdentifier)((c_, f_) => c_.copy(mainIdentifier = f_))
      def traitsId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.traitsId)((c_, f_) => c_.copy(traitsId = f_))
      def addressesIds: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.addressesIds)((c_, f_) => c_.copy(addressesIds = f_))
      def credentialsIds: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.credentialsIds)((c_, f_) => c_.copy(credentialsIds = f_))
      def schemaId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.schemaId)((c_, f_) => c_.copy(schemaId = f_))
      def lock: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock] = field(_.lock)((c_, f_) => c_.copy(lock = f_))
    }
    final val IDENTITY_ID_FIELD_NUMBER = 1
    final val CREATED_AT_FIELD_NUMBER = 2
    final val UPDATED_AT_FIELD_NUMBER = 3
    final val MAIN_IDENTIFIER_FIELD_NUMBER = 4
    final val TRAITS_ID_FIELD_NUMBER = 5
    final val ADDRESSES_IDS_FIELD_NUMBER = 6
    final val CREDENTIALS_IDS_FIELD_NUMBER = 7
    final val SCHEMA_ID_FIELD_NUMBER = 8
    final val LOCK_FIELD_NUMBER = 9
    @transient
    private[admin] val _typemapper_credentialsIds: _root_.scalapb.TypeMapper[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.CredentialsIdsEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
    def of(
      identityId: _root_.scala.Predef.String,
      createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
      updatedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
      mainIdentifier: _root_.scala.Predef.String,
      traitsId: _root_.scala.Predef.String,
      addressesIds: _root_.scala.Seq[_root_.scala.Predef.String],
      credentialsIds: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String],
      schemaId: _root_.scala.Predef.String,
      lock: dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity.Lock
    ): _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity = _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity(
      identityId,
      createdAt,
      updatedAt,
      mainIdentifier,
      traitsId,
      addressesIds,
      credentialsIds,
      schemaId,
      lock
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse.Identity])
  }
  
  implicit class GetIdentityByIdentifierResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse](_l) {
    def identity: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity] = field(_.getIdentity)((c_, f_) => c_.copy(identity = Option(f_)))
    def optionalIdentity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity]] = field(_.identity)((c_, f_) => c_.copy(identity = f_))
  }
  final val IDENTITY_FIELD_NUMBER = 1
  def of(
    identity: _root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse.Identity]
  ): _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse = _root_.dev.auth3.identity.admin.admin.GetIdentityByIdentifierResponse(
    identity
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentityByIdentifierResponse])
}
