// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dev.auth3.identity.admin.admin

@SerialVersionUID(0L)
final case class CreateOAuth2ClientRequest(
    allowedCorsOrigins: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    audience: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    backchannelLogoutSessionRequired: _root_.scala.Boolean = false,
    backchannelLogoutUri: _root_.scala.Predef.String = "",
    clientName: _root_.scala.Predef.String = "",
    clientUri: _root_.scala.Predef.String = "",
    contacts: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    frontchannelLogoutSessionRequired: _root_.scala.Boolean = false,
    frontchannelLogoutUri: _root_.scala.Predef.String = "",
    grantTypes: _root_.scala.Seq[dev.auth3.identity.admin.admin.GrantType] = _root_.scala.Seq.empty,
    jwks: _root_.scala.Option[com.google.protobuf.struct.Struct] = _root_.scala.None,
    jwksUri: _root_.scala.Predef.String = "",
    logoUri: _root_.scala.Predef.String = "",
    metadata: _root_.scala.Option[com.google.protobuf.struct.Struct] = _root_.scala.None,
    owner: _root_.scala.Predef.String = "",
    policyUri: _root_.scala.Predef.String = "",
    postLogoutRedirectUris: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    redirectUris: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    requestObjectSigningAlg: dev.auth3.identity.admin.admin.RequestObjectSigningAlg = dev.auth3.identity.admin.admin.RequestObjectSigningAlg.REQUEST_OBJECT_SIGNING_ALG_UNSET,
    requestUris: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    responseTypes: _root_.scala.Seq[dev.auth3.identity.admin.admin.ResponseType] = _root_.scala.Seq.empty,
    scope: _root_.scala.Predef.String = "",
    sectorIdentifierUri: _root_.scala.Predef.String = "",
    subjectType: dev.auth3.identity.admin.admin.SubjectType = dev.auth3.identity.admin.admin.SubjectType.SUBJECT_TYPE_PUBLIC,
    tokenEndpointAuthMethod: dev.auth3.identity.admin.admin.TokenEndpointAuthMethod = dev.auth3.identity.admin.admin.TokenEndpointAuthMethod.TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC,
    tokenEndpointAuthSigningAlg: dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg = dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg.TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET,
    tosUri: _root_.scala.Predef.String = "",
    userinfoSignedResponseAlg: dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg = dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg.USERINFO_SIGNED_RESPONSE_ALG_UNSET,
    clientSecret: _root_.scala.Predef.String = "",
    clientType: dev.auth3.identity.admin.admin.ClientType = dev.auth3.identity.admin.admin.ClientType.CLIENT_TYPE_UNSET,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CreateOAuth2ClientRequest] {
    private[this] def grantTypesSerializedSize = {
      if (__grantTypesSerializedSizeField == 0) __grantTypesSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        grantTypes.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __grantTypesSerializedSizeField
    }
    @transient private[this] var __grantTypesSerializedSizeField: _root_.scala.Int = 0
    private[this] def responseTypesSerializedSize = {
      if (__responseTypesSerializedSizeField == 0) __responseTypesSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        responseTypes.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __responseTypesSerializedSizeField
    }
    @transient private[this] var __responseTypesSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      allowedCorsOrigins.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      }
      audience.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      
      {
        val __value = backchannelLogoutSessionRequired
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = backchannelLogoutUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = clientName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = clientUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      contacts.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
      }
      
      {
        val __value = frontchannelLogoutSessionRequired
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, __value)
        }
      };
      
      {
        val __value = frontchannelLogoutUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      if (grantTypes.nonEmpty) {
        val __localsize = grantTypesSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (jwks.isDefined) {
        val __value = jwks.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = jwksUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(15, __value)
        }
      };
      
      {
        val __value = logoUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(16, __value)
        }
      };
      if (metadata.isDefined) {
        val __value = metadata.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = owner
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(18, __value)
        }
      };
      
      {
        val __value = policyUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(19, __value)
        }
      };
      postLogoutRedirectUris.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(20, __value)
      }
      redirectUris.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(21, __value)
      }
      
      {
        val __value = requestObjectSigningAlg.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(22, __value)
        }
      };
      requestUris.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(23, __value)
      }
      if (responseTypes.nonEmpty) {
        val __localsize = responseTypesSerializedSize
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      
      {
        val __value = scope
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(25, __value)
        }
      };
      
      {
        val __value = sectorIdentifierUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(26, __value)
        }
      };
      
      {
        val __value = subjectType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(27, __value)
        }
      };
      
      {
        val __value = tokenEndpointAuthMethod.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(28, __value)
        }
      };
      
      {
        val __value = tokenEndpointAuthSigningAlg.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(29, __value)
        }
      };
      
      {
        val __value = tosUri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(30, __value)
        }
      };
      
      {
        val __value = userinfoSignedResponseAlg.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(31, __value)
        }
      };
      
      {
        val __value = clientSecret
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(32, __value)
        }
      };
      
      {
        val __value = clientType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(33, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      allowedCorsOrigins.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      audience.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      {
        val __v = backchannelLogoutSessionRequired
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = backchannelLogoutUri
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = clientName
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = clientUri
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      contacts.foreach { __v =>
        val __m = __v
        _output__.writeString(9, __m)
      };
      {
        val __v = frontchannelLogoutSessionRequired
        if (__v != false) {
          _output__.writeBool(11, __v)
        }
      };
      {
        val __v = frontchannelLogoutUri
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      if (grantTypes.nonEmpty) {
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(grantTypesSerializedSize)
        grantTypes.foreach((_output__.writeEnumNoTag _).compose((_: dev.auth3.identity.admin.admin.GrantType).value))
      };
      jwks.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = jwksUri
        if (!__v.isEmpty) {
          _output__.writeString(15, __v)
        }
      };
      {
        val __v = logoUri
        if (!__v.isEmpty) {
          _output__.writeString(16, __v)
        }
      };
      metadata.foreach { __v =>
        val __m = __v
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = owner
        if (!__v.isEmpty) {
          _output__.writeString(18, __v)
        }
      };
      {
        val __v = policyUri
        if (!__v.isEmpty) {
          _output__.writeString(19, __v)
        }
      };
      postLogoutRedirectUris.foreach { __v =>
        val __m = __v
        _output__.writeString(20, __m)
      };
      redirectUris.foreach { __v =>
        val __m = __v
        _output__.writeString(21, __m)
      };
      {
        val __v = requestObjectSigningAlg.value
        if (__v != 0) {
          _output__.writeEnum(22, __v)
        }
      };
      requestUris.foreach { __v =>
        val __m = __v
        _output__.writeString(23, __m)
      };
      if (responseTypes.nonEmpty) {
        _output__.writeTag(24, 2)
        _output__.writeUInt32NoTag(responseTypesSerializedSize)
        responseTypes.foreach((_output__.writeEnumNoTag _).compose((_: dev.auth3.identity.admin.admin.ResponseType).value))
      };
      {
        val __v = scope
        if (!__v.isEmpty) {
          _output__.writeString(25, __v)
        }
      };
      {
        val __v = sectorIdentifierUri
        if (!__v.isEmpty) {
          _output__.writeString(26, __v)
        }
      };
      {
        val __v = subjectType.value
        if (__v != 0) {
          _output__.writeEnum(27, __v)
        }
      };
      {
        val __v = tokenEndpointAuthMethod.value
        if (__v != 0) {
          _output__.writeEnum(28, __v)
        }
      };
      {
        val __v = tokenEndpointAuthSigningAlg.value
        if (__v != 0) {
          _output__.writeEnum(29, __v)
        }
      };
      {
        val __v = tosUri
        if (!__v.isEmpty) {
          _output__.writeString(30, __v)
        }
      };
      {
        val __v = userinfoSignedResponseAlg.value
        if (__v != 0) {
          _output__.writeEnum(31, __v)
        }
      };
      {
        val __v = clientSecret
        if (!__v.isEmpty) {
          _output__.writeString(32, __v)
        }
      };
      {
        val __v = clientType.value
        if (__v != 0) {
          _output__.writeEnum(33, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearAllowedCorsOrigins = copy(allowedCorsOrigins = _root_.scala.Seq.empty)
    def addAllowedCorsOrigins(__vs: _root_.scala.Predef.String *): CreateOAuth2ClientRequest = addAllAllowedCorsOrigins(__vs)
    def addAllAllowedCorsOrigins(__vs: Iterable[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(allowedCorsOrigins = allowedCorsOrigins ++ __vs)
    def withAllowedCorsOrigins(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(allowedCorsOrigins = __v)
    def clearAudience = copy(audience = _root_.scala.Seq.empty)
    def addAudience(__vs: _root_.scala.Predef.String *): CreateOAuth2ClientRequest = addAllAudience(__vs)
    def addAllAudience(__vs: Iterable[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(audience = audience ++ __vs)
    def withAudience(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(audience = __v)
    def withBackchannelLogoutSessionRequired(__v: _root_.scala.Boolean): CreateOAuth2ClientRequest = copy(backchannelLogoutSessionRequired = __v)
    def withBackchannelLogoutUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(backchannelLogoutUri = __v)
    def withClientName(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(clientName = __v)
    def withClientUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(clientUri = __v)
    def clearContacts = copy(contacts = _root_.scala.Seq.empty)
    def addContacts(__vs: _root_.scala.Predef.String *): CreateOAuth2ClientRequest = addAllContacts(__vs)
    def addAllContacts(__vs: Iterable[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(contacts = contacts ++ __vs)
    def withContacts(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(contacts = __v)
    def withFrontchannelLogoutSessionRequired(__v: _root_.scala.Boolean): CreateOAuth2ClientRequest = copy(frontchannelLogoutSessionRequired = __v)
    def withFrontchannelLogoutUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(frontchannelLogoutUri = __v)
    def clearGrantTypes = copy(grantTypes = _root_.scala.Seq.empty)
    def addGrantTypes(__vs: dev.auth3.identity.admin.admin.GrantType *): CreateOAuth2ClientRequest = addAllGrantTypes(__vs)
    def addAllGrantTypes(__vs: Iterable[dev.auth3.identity.admin.admin.GrantType]): CreateOAuth2ClientRequest = copy(grantTypes = grantTypes ++ __vs)
    def withGrantTypes(__v: _root_.scala.Seq[dev.auth3.identity.admin.admin.GrantType]): CreateOAuth2ClientRequest = copy(grantTypes = __v)
    def getJwks: com.google.protobuf.struct.Struct = jwks.getOrElse(com.google.protobuf.struct.Struct.defaultInstance)
    def clearJwks: CreateOAuth2ClientRequest = copy(jwks = _root_.scala.None)
    def withJwks(__v: com.google.protobuf.struct.Struct): CreateOAuth2ClientRequest = copy(jwks = Option(__v))
    def withJwksUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(jwksUri = __v)
    def withLogoUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(logoUri = __v)
    def getMetadata: com.google.protobuf.struct.Struct = metadata.getOrElse(com.google.protobuf.struct.Struct.defaultInstance)
    def clearMetadata: CreateOAuth2ClientRequest = copy(metadata = _root_.scala.None)
    def withMetadata(__v: com.google.protobuf.struct.Struct): CreateOAuth2ClientRequest = copy(metadata = Option(__v))
    def withOwner(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(owner = __v)
    def withPolicyUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(policyUri = __v)
    def clearPostLogoutRedirectUris = copy(postLogoutRedirectUris = _root_.scala.Seq.empty)
    def addPostLogoutRedirectUris(__vs: _root_.scala.Predef.String *): CreateOAuth2ClientRequest = addAllPostLogoutRedirectUris(__vs)
    def addAllPostLogoutRedirectUris(__vs: Iterable[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(postLogoutRedirectUris = postLogoutRedirectUris ++ __vs)
    def withPostLogoutRedirectUris(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(postLogoutRedirectUris = __v)
    def clearRedirectUris = copy(redirectUris = _root_.scala.Seq.empty)
    def addRedirectUris(__vs: _root_.scala.Predef.String *): CreateOAuth2ClientRequest = addAllRedirectUris(__vs)
    def addAllRedirectUris(__vs: Iterable[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(redirectUris = redirectUris ++ __vs)
    def withRedirectUris(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(redirectUris = __v)
    def withRequestObjectSigningAlg(__v: dev.auth3.identity.admin.admin.RequestObjectSigningAlg): CreateOAuth2ClientRequest = copy(requestObjectSigningAlg = __v)
    def clearRequestUris = copy(requestUris = _root_.scala.Seq.empty)
    def addRequestUris(__vs: _root_.scala.Predef.String *): CreateOAuth2ClientRequest = addAllRequestUris(__vs)
    def addAllRequestUris(__vs: Iterable[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(requestUris = requestUris ++ __vs)
    def withRequestUris(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CreateOAuth2ClientRequest = copy(requestUris = __v)
    def clearResponseTypes = copy(responseTypes = _root_.scala.Seq.empty)
    def addResponseTypes(__vs: dev.auth3.identity.admin.admin.ResponseType *): CreateOAuth2ClientRequest = addAllResponseTypes(__vs)
    def addAllResponseTypes(__vs: Iterable[dev.auth3.identity.admin.admin.ResponseType]): CreateOAuth2ClientRequest = copy(responseTypes = responseTypes ++ __vs)
    def withResponseTypes(__v: _root_.scala.Seq[dev.auth3.identity.admin.admin.ResponseType]): CreateOAuth2ClientRequest = copy(responseTypes = __v)
    def withScope(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(scope = __v)
    def withSectorIdentifierUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(sectorIdentifierUri = __v)
    def withSubjectType(__v: dev.auth3.identity.admin.admin.SubjectType): CreateOAuth2ClientRequest = copy(subjectType = __v)
    def withTokenEndpointAuthMethod(__v: dev.auth3.identity.admin.admin.TokenEndpointAuthMethod): CreateOAuth2ClientRequest = copy(tokenEndpointAuthMethod = __v)
    def withTokenEndpointAuthSigningAlg(__v: dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg): CreateOAuth2ClientRequest = copy(tokenEndpointAuthSigningAlg = __v)
    def withTosUri(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(tosUri = __v)
    def withUserinfoSignedResponseAlg(__v: dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg): CreateOAuth2ClientRequest = copy(userinfoSignedResponseAlg = __v)
    def withClientSecret(__v: _root_.scala.Predef.String): CreateOAuth2ClientRequest = copy(clientSecret = __v)
    def withClientType(__v: dev.auth3.identity.admin.admin.ClientType): CreateOAuth2ClientRequest = copy(clientType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => allowedCorsOrigins
        case 2 => audience
        case 3 => {
          val __t = backchannelLogoutSessionRequired
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = backchannelLogoutUri
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = clientName
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = clientUri
          if (__t != "") __t else null
        }
        case 9 => contacts
        case 11 => {
          val __t = frontchannelLogoutSessionRequired
          if (__t != false) __t else null
        }
        case 12 => {
          val __t = frontchannelLogoutUri
          if (__t != "") __t else null
        }
        case 13 => grantTypes.iterator.map(_.javaValueDescriptor).toSeq
        case 14 => jwks.orNull
        case 15 => {
          val __t = jwksUri
          if (__t != "") __t else null
        }
        case 16 => {
          val __t = logoUri
          if (__t != "") __t else null
        }
        case 17 => metadata.orNull
        case 18 => {
          val __t = owner
          if (__t != "") __t else null
        }
        case 19 => {
          val __t = policyUri
          if (__t != "") __t else null
        }
        case 20 => postLogoutRedirectUris
        case 21 => redirectUris
        case 22 => {
          val __t = requestObjectSigningAlg.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 23 => requestUris
        case 24 => responseTypes.iterator.map(_.javaValueDescriptor).toSeq
        case 25 => {
          val __t = scope
          if (__t != "") __t else null
        }
        case 26 => {
          val __t = sectorIdentifierUri
          if (__t != "") __t else null
        }
        case 27 => {
          val __t = subjectType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 28 => {
          val __t = tokenEndpointAuthMethod.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 29 => {
          val __t = tokenEndpointAuthSigningAlg.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 30 => {
          val __t = tosUri
          if (__t != "") __t else null
        }
        case 31 => {
          val __t = userinfoSignedResponseAlg.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 32 => {
          val __t = clientSecret
          if (__t != "") __t else null
        }
        case 33 => {
          val __t = clientType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(allowedCorsOrigins.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 2 => _root_.scalapb.descriptors.PRepeated(audience.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PBoolean(backchannelLogoutSessionRequired)
        case 4 => _root_.scalapb.descriptors.PString(backchannelLogoutUri)
        case 6 => _root_.scalapb.descriptors.PString(clientName)
        case 8 => _root_.scalapb.descriptors.PString(clientUri)
        case 9 => _root_.scalapb.descriptors.PRepeated(contacts.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 11 => _root_.scalapb.descriptors.PBoolean(frontchannelLogoutSessionRequired)
        case 12 => _root_.scalapb.descriptors.PString(frontchannelLogoutUri)
        case 13 => _root_.scalapb.descriptors.PRepeated(grantTypes.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 14 => jwks.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 15 => _root_.scalapb.descriptors.PString(jwksUri)
        case 16 => _root_.scalapb.descriptors.PString(logoUri)
        case 17 => metadata.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 18 => _root_.scalapb.descriptors.PString(owner)
        case 19 => _root_.scalapb.descriptors.PString(policyUri)
        case 20 => _root_.scalapb.descriptors.PRepeated(postLogoutRedirectUris.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 21 => _root_.scalapb.descriptors.PRepeated(redirectUris.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 22 => _root_.scalapb.descriptors.PEnum(requestObjectSigningAlg.scalaValueDescriptor)
        case 23 => _root_.scalapb.descriptors.PRepeated(requestUris.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 24 => _root_.scalapb.descriptors.PRepeated(responseTypes.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
        case 25 => _root_.scalapb.descriptors.PString(scope)
        case 26 => _root_.scalapb.descriptors.PString(sectorIdentifierUri)
        case 27 => _root_.scalapb.descriptors.PEnum(subjectType.scalaValueDescriptor)
        case 28 => _root_.scalapb.descriptors.PEnum(tokenEndpointAuthMethod.scalaValueDescriptor)
        case 29 => _root_.scalapb.descriptors.PEnum(tokenEndpointAuthSigningAlg.scalaValueDescriptor)
        case 30 => _root_.scalapb.descriptors.PString(tosUri)
        case 31 => _root_.scalapb.descriptors.PEnum(userinfoSignedResponseAlg.scalaValueDescriptor)
        case 32 => _root_.scalapb.descriptors.PString(clientSecret)
        case 33 => _root_.scalapb.descriptors.PEnum(clientType.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest.type = dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest
    // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest])
}

object CreateOAuth2ClientRequest extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest = {
    val __allowedCorsOrigins: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __audience: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __backchannelLogoutSessionRequired: _root_.scala.Boolean = false
    var __backchannelLogoutUri: _root_.scala.Predef.String = ""
    var __clientName: _root_.scala.Predef.String = ""
    var __clientUri: _root_.scala.Predef.String = ""
    val __contacts: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __frontchannelLogoutSessionRequired: _root_.scala.Boolean = false
    var __frontchannelLogoutUri: _root_.scala.Predef.String = ""
    val __grantTypes: _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GrantType] = new _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GrantType]
    var __jwks: _root_.scala.Option[com.google.protobuf.struct.Struct] = _root_.scala.None
    var __jwksUri: _root_.scala.Predef.String = ""
    var __logoUri: _root_.scala.Predef.String = ""
    var __metadata: _root_.scala.Option[com.google.protobuf.struct.Struct] = _root_.scala.None
    var __owner: _root_.scala.Predef.String = ""
    var __policyUri: _root_.scala.Predef.String = ""
    val __postLogoutRedirectUris: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __redirectUris: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __requestObjectSigningAlg: dev.auth3.identity.admin.admin.RequestObjectSigningAlg = dev.auth3.identity.admin.admin.RequestObjectSigningAlg.REQUEST_OBJECT_SIGNING_ALG_UNSET
    val __requestUris: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __responseTypes: _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.ResponseType] = new _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.ResponseType]
    var __scope: _root_.scala.Predef.String = ""
    var __sectorIdentifierUri: _root_.scala.Predef.String = ""
    var __subjectType: dev.auth3.identity.admin.admin.SubjectType = dev.auth3.identity.admin.admin.SubjectType.SUBJECT_TYPE_PUBLIC
    var __tokenEndpointAuthMethod: dev.auth3.identity.admin.admin.TokenEndpointAuthMethod = dev.auth3.identity.admin.admin.TokenEndpointAuthMethod.TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC
    var __tokenEndpointAuthSigningAlg: dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg = dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg.TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET
    var __tosUri: _root_.scala.Predef.String = ""
    var __userinfoSignedResponseAlg: dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg = dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg.USERINFO_SIGNED_RESPONSE_ALG_UNSET
    var __clientSecret: _root_.scala.Predef.String = ""
    var __clientType: dev.auth3.identity.admin.admin.ClientType = dev.auth3.identity.admin.admin.ClientType.CLIENT_TYPE_UNSET
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __allowedCorsOrigins += _input__.readStringRequireUtf8()
        case 18 =>
          __audience += _input__.readStringRequireUtf8()
        case 24 =>
          __backchannelLogoutSessionRequired = _input__.readBool()
        case 34 =>
          __backchannelLogoutUri = _input__.readStringRequireUtf8()
        case 50 =>
          __clientName = _input__.readStringRequireUtf8()
        case 66 =>
          __clientUri = _input__.readStringRequireUtf8()
        case 74 =>
          __contacts += _input__.readStringRequireUtf8()
        case 88 =>
          __frontchannelLogoutSessionRequired = _input__.readBool()
        case 98 =>
          __frontchannelLogoutUri = _input__.readStringRequireUtf8()
        case 104 =>
          __grantTypes += dev.auth3.identity.admin.admin.GrantType.fromValue(_input__.readEnum())
        case 106 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __grantTypes += dev.auth3.identity.admin.admin.GrantType.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 114 =>
          __jwks = Option(__jwks.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.struct.Struct](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 122 =>
          __jwksUri = _input__.readStringRequireUtf8()
        case 130 =>
          __logoUri = _input__.readStringRequireUtf8()
        case 138 =>
          __metadata = Option(__metadata.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.struct.Struct](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 146 =>
          __owner = _input__.readStringRequireUtf8()
        case 154 =>
          __policyUri = _input__.readStringRequireUtf8()
        case 162 =>
          __postLogoutRedirectUris += _input__.readStringRequireUtf8()
        case 170 =>
          __redirectUris += _input__.readStringRequireUtf8()
        case 176 =>
          __requestObjectSigningAlg = dev.auth3.identity.admin.admin.RequestObjectSigningAlg.fromValue(_input__.readEnum())
        case 186 =>
          __requestUris += _input__.readStringRequireUtf8()
        case 192 =>
          __responseTypes += dev.auth3.identity.admin.admin.ResponseType.fromValue(_input__.readEnum())
        case 194 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __responseTypes += dev.auth3.identity.admin.admin.ResponseType.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case 202 =>
          __scope = _input__.readStringRequireUtf8()
        case 210 =>
          __sectorIdentifierUri = _input__.readStringRequireUtf8()
        case 216 =>
          __subjectType = dev.auth3.identity.admin.admin.SubjectType.fromValue(_input__.readEnum())
        case 224 =>
          __tokenEndpointAuthMethod = dev.auth3.identity.admin.admin.TokenEndpointAuthMethod.fromValue(_input__.readEnum())
        case 232 =>
          __tokenEndpointAuthSigningAlg = dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg.fromValue(_input__.readEnum())
        case 242 =>
          __tosUri = _input__.readStringRequireUtf8()
        case 248 =>
          __userinfoSignedResponseAlg = dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg.fromValue(_input__.readEnum())
        case 258 =>
          __clientSecret = _input__.readStringRequireUtf8()
        case 264 =>
          __clientType = dev.auth3.identity.admin.admin.ClientType.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest(
        allowedCorsOrigins = __allowedCorsOrigins.result(),
        audience = __audience.result(),
        backchannelLogoutSessionRequired = __backchannelLogoutSessionRequired,
        backchannelLogoutUri = __backchannelLogoutUri,
        clientName = __clientName,
        clientUri = __clientUri,
        contacts = __contacts.result(),
        frontchannelLogoutSessionRequired = __frontchannelLogoutSessionRequired,
        frontchannelLogoutUri = __frontchannelLogoutUri,
        grantTypes = __grantTypes.result(),
        jwks = __jwks,
        jwksUri = __jwksUri,
        logoUri = __logoUri,
        metadata = __metadata,
        owner = __owner,
        policyUri = __policyUri,
        postLogoutRedirectUris = __postLogoutRedirectUris.result(),
        redirectUris = __redirectUris.result(),
        requestObjectSigningAlg = __requestObjectSigningAlg,
        requestUris = __requestUris.result(),
        responseTypes = __responseTypes.result(),
        scope = __scope,
        sectorIdentifierUri = __sectorIdentifierUri,
        subjectType = __subjectType,
        tokenEndpointAuthMethod = __tokenEndpointAuthMethod,
        tokenEndpointAuthSigningAlg = __tokenEndpointAuthSigningAlg,
        tosUri = __tosUri,
        userinfoSignedResponseAlg = __userinfoSignedResponseAlg,
        clientSecret = __clientSecret,
        clientType = __clientType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest(
        allowedCorsOrigins = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        audience = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        backchannelLogoutSessionRequired = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        backchannelLogoutUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        clientName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        clientUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        contacts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        frontchannelLogoutSessionRequired = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        frontchannelLogoutUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        grantTypes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => dev.auth3.identity.admin.admin.GrantType.fromValue(__e.number)).toSeq,
        jwks = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.struct.Struct]]),
        jwksUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        logoUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        metadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.struct.Struct]]),
        owner = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        policyUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        postLogoutRedirectUris = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        redirectUris = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        requestObjectSigningAlg = dev.auth3.identity.admin.admin.RequestObjectSigningAlg.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.RequestObjectSigningAlg.REQUEST_OBJECT_SIGNING_ALG_UNSET.scalaValueDescriptor).number),
        requestUris = __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        responseTypes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => dev.auth3.identity.admin.admin.ResponseType.fromValue(__e.number)).toSeq,
        scope = __fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        sectorIdentifierUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(26).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        subjectType = dev.auth3.identity.admin.admin.SubjectType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.SubjectType.SUBJECT_TYPE_PUBLIC.scalaValueDescriptor).number),
        tokenEndpointAuthMethod = dev.auth3.identity.admin.admin.TokenEndpointAuthMethod.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.TokenEndpointAuthMethod.TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC.scalaValueDescriptor).number),
        tokenEndpointAuthSigningAlg = dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg.TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET.scalaValueDescriptor).number),
        tosUri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        userinfoSignedResponseAlg = dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg.USERINFO_SIGNED_RESPONSE_ALG_UNSET.scalaValueDescriptor).number),
        clientSecret = __fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        clientType = dev.auth3.identity.admin.admin.ClientType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.ClientType.CLIENT_TYPE_UNSET.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(26)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(26)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 14 => __out = com.google.protobuf.struct.Struct
      case 17 => __out = com.google.protobuf.struct.Struct
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 13 => dev.auth3.identity.admin.admin.GrantType
      case 22 => dev.auth3.identity.admin.admin.RequestObjectSigningAlg
      case 24 => dev.auth3.identity.admin.admin.ResponseType
      case 27 => dev.auth3.identity.admin.admin.SubjectType
      case 28 => dev.auth3.identity.admin.admin.TokenEndpointAuthMethod
      case 29 => dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg
      case 31 => dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg
      case 33 => dev.auth3.identity.admin.admin.ClientType
    }
  }
  lazy val defaultInstance = dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest(
    allowedCorsOrigins = _root_.scala.Seq.empty,
    audience = _root_.scala.Seq.empty,
    backchannelLogoutSessionRequired = false,
    backchannelLogoutUri = "",
    clientName = "",
    clientUri = "",
    contacts = _root_.scala.Seq.empty,
    frontchannelLogoutSessionRequired = false,
    frontchannelLogoutUri = "",
    grantTypes = _root_.scala.Seq.empty,
    jwks = _root_.scala.None,
    jwksUri = "",
    logoUri = "",
    metadata = _root_.scala.None,
    owner = "",
    policyUri = "",
    postLogoutRedirectUris = _root_.scala.Seq.empty,
    redirectUris = _root_.scala.Seq.empty,
    requestObjectSigningAlg = dev.auth3.identity.admin.admin.RequestObjectSigningAlg.REQUEST_OBJECT_SIGNING_ALG_UNSET,
    requestUris = _root_.scala.Seq.empty,
    responseTypes = _root_.scala.Seq.empty,
    scope = "",
    sectorIdentifierUri = "",
    subjectType = dev.auth3.identity.admin.admin.SubjectType.SUBJECT_TYPE_PUBLIC,
    tokenEndpointAuthMethod = dev.auth3.identity.admin.admin.TokenEndpointAuthMethod.TOKEN_ENDPOINT_AUTH_METHOD_CLIENT_SECRET_BASIC,
    tokenEndpointAuthSigningAlg = dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg.TOKEN_ENDPOINT_AUTH_SIGNING_ALG_UNSET,
    tosUri = "",
    userinfoSignedResponseAlg = dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg.USERINFO_SIGNED_RESPONSE_ALG_UNSET,
    clientSecret = "",
    clientType = dev.auth3.identity.admin.admin.ClientType.CLIENT_TYPE_UNSET
  )
  implicit class CreateOAuth2ClientRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest](_l) {
    def allowedCorsOrigins: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.allowedCorsOrigins)((c_, f_) => c_.copy(allowedCorsOrigins = f_))
    def audience: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.audience)((c_, f_) => c_.copy(audience = f_))
    def backchannelLogoutSessionRequired: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.backchannelLogoutSessionRequired)((c_, f_) => c_.copy(backchannelLogoutSessionRequired = f_))
    def backchannelLogoutUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.backchannelLogoutUri)((c_, f_) => c_.copy(backchannelLogoutUri = f_))
    def clientName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientName)((c_, f_) => c_.copy(clientName = f_))
    def clientUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientUri)((c_, f_) => c_.copy(clientUri = f_))
    def contacts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.contacts)((c_, f_) => c_.copy(contacts = f_))
    def frontchannelLogoutSessionRequired: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.frontchannelLogoutSessionRequired)((c_, f_) => c_.copy(frontchannelLogoutSessionRequired = f_))
    def frontchannelLogoutUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.frontchannelLogoutUri)((c_, f_) => c_.copy(frontchannelLogoutUri = f_))
    def grantTypes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[dev.auth3.identity.admin.admin.GrantType]] = field(_.grantTypes)((c_, f_) => c_.copy(grantTypes = f_))
    def jwks: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.struct.Struct] = field(_.getJwks)((c_, f_) => c_.copy(jwks = Option(f_)))
    def optionalJwks: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.struct.Struct]] = field(_.jwks)((c_, f_) => c_.copy(jwks = f_))
    def jwksUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.jwksUri)((c_, f_) => c_.copy(jwksUri = f_))
    def logoUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.logoUri)((c_, f_) => c_.copy(logoUri = f_))
    def metadata: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.struct.Struct] = field(_.getMetadata)((c_, f_) => c_.copy(metadata = Option(f_)))
    def optionalMetadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.struct.Struct]] = field(_.metadata)((c_, f_) => c_.copy(metadata = f_))
    def owner: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.owner)((c_, f_) => c_.copy(owner = f_))
    def policyUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.policyUri)((c_, f_) => c_.copy(policyUri = f_))
    def postLogoutRedirectUris: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.postLogoutRedirectUris)((c_, f_) => c_.copy(postLogoutRedirectUris = f_))
    def redirectUris: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.redirectUris)((c_, f_) => c_.copy(redirectUris = f_))
    def requestObjectSigningAlg: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.RequestObjectSigningAlg] = field(_.requestObjectSigningAlg)((c_, f_) => c_.copy(requestObjectSigningAlg = f_))
    def requestUris: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.requestUris)((c_, f_) => c_.copy(requestUris = f_))
    def responseTypes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[dev.auth3.identity.admin.admin.ResponseType]] = field(_.responseTypes)((c_, f_) => c_.copy(responseTypes = f_))
    def scope: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.scope)((c_, f_) => c_.copy(scope = f_))
    def sectorIdentifierUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sectorIdentifierUri)((c_, f_) => c_.copy(sectorIdentifierUri = f_))
    def subjectType: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.SubjectType] = field(_.subjectType)((c_, f_) => c_.copy(subjectType = f_))
    def tokenEndpointAuthMethod: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.TokenEndpointAuthMethod] = field(_.tokenEndpointAuthMethod)((c_, f_) => c_.copy(tokenEndpointAuthMethod = f_))
    def tokenEndpointAuthSigningAlg: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg] = field(_.tokenEndpointAuthSigningAlg)((c_, f_) => c_.copy(tokenEndpointAuthSigningAlg = f_))
    def tosUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tosUri)((c_, f_) => c_.copy(tosUri = f_))
    def userinfoSignedResponseAlg: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg] = field(_.userinfoSignedResponseAlg)((c_, f_) => c_.copy(userinfoSignedResponseAlg = f_))
    def clientSecret: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientSecret)((c_, f_) => c_.copy(clientSecret = f_))
    def clientType: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.ClientType] = field(_.clientType)((c_, f_) => c_.copy(clientType = f_))
  }
  final val ALLOWED_CORS_ORIGINS_FIELD_NUMBER = 1
  final val AUDIENCE_FIELD_NUMBER = 2
  final val BACKCHANNEL_LOGOUT_SESSION_REQUIRED_FIELD_NUMBER = 3
  final val BACKCHANNEL_LOGOUT_URI_FIELD_NUMBER = 4
  final val CLIENT_NAME_FIELD_NUMBER = 6
  final val CLIENT_URI_FIELD_NUMBER = 8
  final val CONTACTS_FIELD_NUMBER = 9
  final val FRONTCHANNEL_LOGOUT_SESSION_REQUIRED_FIELD_NUMBER = 11
  final val FRONTCHANNEL_LOGOUT_URI_FIELD_NUMBER = 12
  final val GRANT_TYPES_FIELD_NUMBER = 13
  final val JWKS_FIELD_NUMBER = 14
  final val JWKS_URI_FIELD_NUMBER = 15
  final val LOGO_URI_FIELD_NUMBER = 16
  final val METADATA_FIELD_NUMBER = 17
  final val OWNER_FIELD_NUMBER = 18
  final val POLICY_URI_FIELD_NUMBER = 19
  final val POST_LOGOUT_REDIRECT_URIS_FIELD_NUMBER = 20
  final val REDIRECT_URIS_FIELD_NUMBER = 21
  final val REQUEST_OBJECT_SIGNING_ALG_FIELD_NUMBER = 22
  final val REQUEST_URIS_FIELD_NUMBER = 23
  final val RESPONSE_TYPES_FIELD_NUMBER = 24
  final val SCOPE_FIELD_NUMBER = 25
  final val SECTOR_IDENTIFIER_URI_FIELD_NUMBER = 26
  final val SUBJECT_TYPE_FIELD_NUMBER = 27
  final val TOKEN_ENDPOINT_AUTH_METHOD_FIELD_NUMBER = 28
  final val TOKEN_ENDPOINT_AUTH_SIGNING_ALG_FIELD_NUMBER = 29
  final val TOS_URI_FIELD_NUMBER = 30
  final val USERINFO_SIGNED_RESPONSE_ALG_FIELD_NUMBER = 31
  final val CLIENT_SECRET_FIELD_NUMBER = 32
  final val CLIENT_TYPE_FIELD_NUMBER = 33
  def of(
    allowedCorsOrigins: _root_.scala.Seq[_root_.scala.Predef.String],
    audience: _root_.scala.Seq[_root_.scala.Predef.String],
    backchannelLogoutSessionRequired: _root_.scala.Boolean,
    backchannelLogoutUri: _root_.scala.Predef.String,
    clientName: _root_.scala.Predef.String,
    clientUri: _root_.scala.Predef.String,
    contacts: _root_.scala.Seq[_root_.scala.Predef.String],
    frontchannelLogoutSessionRequired: _root_.scala.Boolean,
    frontchannelLogoutUri: _root_.scala.Predef.String,
    grantTypes: _root_.scala.Seq[dev.auth3.identity.admin.admin.GrantType],
    jwks: _root_.scala.Option[com.google.protobuf.struct.Struct],
    jwksUri: _root_.scala.Predef.String,
    logoUri: _root_.scala.Predef.String,
    metadata: _root_.scala.Option[com.google.protobuf.struct.Struct],
    owner: _root_.scala.Predef.String,
    policyUri: _root_.scala.Predef.String,
    postLogoutRedirectUris: _root_.scala.Seq[_root_.scala.Predef.String],
    redirectUris: _root_.scala.Seq[_root_.scala.Predef.String],
    requestObjectSigningAlg: dev.auth3.identity.admin.admin.RequestObjectSigningAlg,
    requestUris: _root_.scala.Seq[_root_.scala.Predef.String],
    responseTypes: _root_.scala.Seq[dev.auth3.identity.admin.admin.ResponseType],
    scope: _root_.scala.Predef.String,
    sectorIdentifierUri: _root_.scala.Predef.String,
    subjectType: dev.auth3.identity.admin.admin.SubjectType,
    tokenEndpointAuthMethod: dev.auth3.identity.admin.admin.TokenEndpointAuthMethod,
    tokenEndpointAuthSigningAlg: dev.auth3.identity.admin.admin.TokenEndpointAuthSigningAlg,
    tosUri: _root_.scala.Predef.String,
    userinfoSignedResponseAlg: dev.auth3.identity.admin.admin.UserinfoSignedResponseAlg,
    clientSecret: _root_.scala.Predef.String,
    clientType: dev.auth3.identity.admin.admin.ClientType
  ): _root_.dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest = _root_.dev.auth3.identity.admin.admin.CreateOAuth2ClientRequest(
    allowedCorsOrigins,
    audience,
    backchannelLogoutSessionRequired,
    backchannelLogoutUri,
    clientName,
    clientUri,
    contacts,
    frontchannelLogoutSessionRequired,
    frontchannelLogoutUri,
    grantTypes,
    jwks,
    jwksUri,
    logoUri,
    metadata,
    owner,
    policyUri,
    postLogoutRedirectUris,
    redirectUris,
    requestObjectSigningAlg,
    requestUris,
    responseTypes,
    scope,
    sectorIdentifierUri,
    subjectType,
    tokenEndpointAuthMethod,
    tokenEndpointAuthSigningAlg,
    tosUri,
    userinfoSignedResponseAlg,
    clientSecret,
    clientType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.CreateOAuth2ClientRequest])
}
