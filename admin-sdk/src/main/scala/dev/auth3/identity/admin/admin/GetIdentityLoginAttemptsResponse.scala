// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dev.auth3.identity.admin.admin

@SerialVersionUID(0L)
final case class GetIdentityLoginAttemptsResponse(
    attempts: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetIdentityLoginAttemptsResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      attempts.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      attempts.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def clearAttempts = copy(attempts = _root_.scala.Seq.empty)
    def addAttempts(__vs: dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt *): GetIdentityLoginAttemptsResponse = addAllAttempts(__vs)
    def addAllAttempts(__vs: Iterable[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]): GetIdentityLoginAttemptsResponse = copy(attempts = attempts ++ __vs)
    def withAttempts(__v: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]): GetIdentityLoginAttemptsResponse = copy(attempts = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => attempts
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(attempts.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.type = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse
    // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse])
}

object GetIdentityLoginAttemptsResponse extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse = {
    val __attempts: _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt] = new _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __attempts += _root_.scalapb.LiteParser.readMessage[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse(
        attempts = __attempts.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse(
        attempts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(45)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(45)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse(
    attempts = _root_.scala.Seq.empty
  )
  @SerialVersionUID(0L)
  final case class Attempt(
      id: _root_.scala.Predef.String = "",
      identityId: _root_.scala.Predef.String = "",
      status: _root_.scala.Predef.String = "",
      authenticationMethods: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
      createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      expiresAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Attempt] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = id
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = identityId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = status
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        authenticationMethods.foreach { __item =>
          val __value = __item
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
        if (createdAt.isDefined) {
          val __value = createdAt.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (expiresAt.isDefined) {
          val __value = expiresAt.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = id
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = identityId
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = status
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        authenticationMethods.foreach { __v =>
          val __m = __v
          _output__.writeString(4, __m)
        };
        createdAt.foreach { __v =>
          val __m = __v
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        expiresAt.foreach { __v =>
          val __m = __v
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withId(__v: _root_.scala.Predef.String): Attempt = copy(id = __v)
      def withIdentityId(__v: _root_.scala.Predef.String): Attempt = copy(identityId = __v)
      def withStatus(__v: _root_.scala.Predef.String): Attempt = copy(status = __v)
      def clearAuthenticationMethods = copy(authenticationMethods = _root_.scala.Seq.empty)
      def addAuthenticationMethods(__vs: _root_.scala.Predef.String *): Attempt = addAllAuthenticationMethods(__vs)
      def addAllAuthenticationMethods(__vs: Iterable[_root_.scala.Predef.String]): Attempt = copy(authenticationMethods = authenticationMethods ++ __vs)
      def withAuthenticationMethods(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Attempt = copy(authenticationMethods = __v)
      def getCreatedAt: com.google.protobuf.timestamp.Timestamp = createdAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearCreatedAt: Attempt = copy(createdAt = _root_.scala.None)
      def withCreatedAt(__v: com.google.protobuf.timestamp.Timestamp): Attempt = copy(createdAt = Option(__v))
      def getExpiresAt: com.google.protobuf.timestamp.Timestamp = expiresAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearExpiresAt: Attempt = copy(expiresAt = _root_.scala.None)
      def withExpiresAt(__v: com.google.protobuf.timestamp.Timestamp): Attempt = copy(expiresAt = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = id
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = identityId
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = status
            if (__t != "") __t else null
          }
          case 4 => authenticationMethods
          case 5 => createdAt.orNull
          case 6 => expiresAt.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(id)
          case 2 => _root_.scalapb.descriptors.PString(identityId)
          case 3 => _root_.scalapb.descriptors.PString(status)
          case 4 => _root_.scalapb.descriptors.PRepeated(authenticationMethods.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
          case 5 => createdAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 6 => expiresAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt.type = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt
      // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt])
  }
  
  object Attempt extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt = {
      var __id: _root_.scala.Predef.String = ""
      var __identityId: _root_.scala.Predef.String = ""
      var __status: _root_.scala.Predef.String = ""
      val __authenticationMethods: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
      var __createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var __expiresAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __id = _input__.readStringRequireUtf8()
          case 18 =>
            __identityId = _input__.readStringRequireUtf8()
          case 26 =>
            __status = _input__.readStringRequireUtf8()
          case 34 =>
            __authenticationMethods += _input__.readStringRequireUtf8()
          case 42 =>
            __createdAt = Option(__createdAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 50 =>
            __expiresAt = Option(__expiresAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt(
          id = __id,
          identityId = __identityId,
          status = __status,
          authenticationMethods = __authenticationMethods.result(),
          createdAt = __createdAt,
          expiresAt = __expiresAt,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt(
          id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          identityId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          status = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          authenticationMethods = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
          createdAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
          expiresAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 5 => __out = com.google.protobuf.timestamp.Timestamp
        case 6 => __out = com.google.protobuf.timestamp.Timestamp
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt(
      id = "",
      identityId = "",
      status = "",
      authenticationMethods = _root_.scala.Seq.empty,
      createdAt = _root_.scala.None,
      expiresAt = _root_.scala.None
    )
    implicit class AttemptLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt](_l) {
      def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def identityId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.identityId)((c_, f_) => c_.copy(identityId = f_))
      def status: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.status)((c_, f_) => c_.copy(status = f_))
      def authenticationMethods: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.authenticationMethods)((c_, f_) => c_.copy(authenticationMethods = f_))
      def createdAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getCreatedAt)((c_, f_) => c_.copy(createdAt = Option(f_)))
      def optionalCreatedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.createdAt)((c_, f_) => c_.copy(createdAt = f_))
      def expiresAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getExpiresAt)((c_, f_) => c_.copy(expiresAt = Option(f_)))
      def optionalExpiresAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.expiresAt)((c_, f_) => c_.copy(expiresAt = f_))
    }
    final val ID_FIELD_NUMBER = 1
    final val IDENTITY_ID_FIELD_NUMBER = 2
    final val STATUS_FIELD_NUMBER = 3
    final val AUTHENTICATION_METHODS_FIELD_NUMBER = 4
    final val CREATED_AT_FIELD_NUMBER = 5
    final val EXPIRES_AT_FIELD_NUMBER = 6
    def of(
      id: _root_.scala.Predef.String,
      identityId: _root_.scala.Predef.String,
      status: _root_.scala.Predef.String,
      authenticationMethods: _root_.scala.Seq[_root_.scala.Predef.String],
      createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
      expiresAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
    ): _root_.dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt = _root_.dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt(
      id,
      identityId,
      status,
      authenticationMethods,
      createdAt,
      expiresAt
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse.Attempt])
  }
  
  implicit class GetIdentityLoginAttemptsResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse](_l) {
    def attempts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]] = field(_.attempts)((c_, f_) => c_.copy(attempts = f_))
  }
  final val ATTEMPTS_FIELD_NUMBER = 1
  def of(
    attempts: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse.Attempt]
  ): _root_.dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse = _root_.dev.auth3.identity.admin.admin.GetIdentityLoginAttemptsResponse(
    attempts
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentityLoginAttemptsResponse])
}
