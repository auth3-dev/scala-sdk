// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dev.auth3.identity.admin.admin

@SerialVersionUID(0L)
final case class GetIdentitiesResponse(
    identities: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity] = _root_.scala.Seq.empty,
    nextPageToken: _root_.scala.Predef.String = "",
    totalSize: _root_.scala.Int = 0,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetIdentitiesResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      identities.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = nextPageToken
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = totalSize
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      identities.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = nextPageToken
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = totalSize
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearIdentities = copy(identities = _root_.scala.Seq.empty)
    def addIdentities(__vs: dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity *): GetIdentitiesResponse = addAllIdentities(__vs)
    def addAllIdentities(__vs: Iterable[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity]): GetIdentitiesResponse = copy(identities = identities ++ __vs)
    def withIdentities(__v: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity]): GetIdentitiesResponse = copy(identities = __v)
    def withNextPageToken(__v: _root_.scala.Predef.String): GetIdentitiesResponse = copy(nextPageToken = __v)
    def withTotalSize(__v: _root_.scala.Int): GetIdentitiesResponse = copy(totalSize = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => identities
        case 2 => {
          val __t = nextPageToken
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = totalSize
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(identities.iterator.map(_.toPMessage).toVector)
        case 2 => _root_.scalapb.descriptors.PString(nextPageToken)
        case 3 => _root_.scalapb.descriptors.PInt(totalSize)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: dev.auth3.identity.admin.admin.GetIdentitiesResponse.type = dev.auth3.identity.admin.admin.GetIdentitiesResponse
    // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse])
}

object GetIdentitiesResponse extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentitiesResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentitiesResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentitiesResponse = {
    val __identities: _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity] = new _root_.scala.collection.immutable.VectorBuilder[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity]
    var __nextPageToken: _root_.scala.Predef.String = ""
    var __totalSize: _root_.scala.Int = 0
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __identities += _root_.scalapb.LiteParser.readMessage[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity](_input__)
        case 18 =>
          __nextPageToken = _input__.readStringRequireUtf8()
        case 24 =>
          __totalSize = _input__.readInt32()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    dev.auth3.identity.admin.admin.GetIdentitiesResponse(
        identities = __identities.result(),
        nextPageToken = __nextPageToken,
        totalSize = __totalSize,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentitiesResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      dev.auth3.identity.admin.admin.GetIdentitiesResponse(
        identities = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity]]).getOrElse(_root_.scala.Seq.empty),
        nextPageToken = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        totalSize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentitiesResponse(
    identities = _root_.scala.Seq.empty,
    nextPageToken = "",
    totalSize = 0
  )
  sealed abstract class Lock(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = Lock
    def isUnlocked: _root_.scala.Boolean = false
    def isAdminLocked: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Lock] = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock
    final def asRecognized: _root_.scala.Option[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.Recognized])
  }
  
  object Lock extends _root_.scalapb.GeneratedEnumCompanion[Lock] {
    sealed trait Recognized extends Lock
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Lock] = this
    
    @SerialVersionUID(0L)
    case object UNLOCKED extends Lock(0) with Lock.Recognized {
      val index = 0
      val name = "UNLOCKED"
      override def isUnlocked: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ADMIN_LOCKED extends Lock(1) with Lock.Recognized {
      val index = 1
      val name = "ADMIN_LOCKED"
      override def isAdminLocked: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Lock(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values = scala.collection.immutable.Seq(UNLOCKED, ADMIN_LOCKED)
    def fromValue(__value: _root_.scala.Int): Lock = __value match {
      case 0 => UNLOCKED
      case 1 => ADMIN_LOCKED
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = dev.auth3.identity.admin.admin.GetIdentitiesResponse.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = dev.auth3.identity.admin.admin.GetIdentitiesResponse.scalaDescriptor.enums(0)
  }
  @SerialVersionUID(0L)
  final case class Identity(
      identityId: _root_.scala.Predef.String = "",
      createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      updatedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
      mainIdentifier: _root_.scala.Predef.String = "",
      schemaId: _root_.scala.Predef.String = "",
      lock: dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.UNLOCKED,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Identity] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = identityId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (createdAt.isDefined) {
          val __value = createdAt.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (updatedAt.isDefined) {
          val __value = updatedAt.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        
        {
          val __value = mainIdentifier
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
          }
        };
        
        {
          val __value = schemaId
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
          }
        };
        
        {
          val __value = lock.value
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = identityId
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        createdAt.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        updatedAt.foreach { __v =>
          val __m = __v
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        {
          val __v = mainIdentifier
          if (!__v.isEmpty) {
            _output__.writeString(4, __v)
          }
        };
        {
          val __v = schemaId
          if (!__v.isEmpty) {
            _output__.writeString(5, __v)
          }
        };
        {
          val __v = lock.value
          if (__v != 0) {
            _output__.writeEnum(6, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withIdentityId(__v: _root_.scala.Predef.String): Identity = copy(identityId = __v)
      def getCreatedAt: com.google.protobuf.timestamp.Timestamp = createdAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearCreatedAt: Identity = copy(createdAt = _root_.scala.None)
      def withCreatedAt(__v: com.google.protobuf.timestamp.Timestamp): Identity = copy(createdAt = Option(__v))
      def getUpdatedAt: com.google.protobuf.timestamp.Timestamp = updatedAt.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
      def clearUpdatedAt: Identity = copy(updatedAt = _root_.scala.None)
      def withUpdatedAt(__v: com.google.protobuf.timestamp.Timestamp): Identity = copy(updatedAt = Option(__v))
      def withMainIdentifier(__v: _root_.scala.Predef.String): Identity = copy(mainIdentifier = __v)
      def withSchemaId(__v: _root_.scala.Predef.String): Identity = copy(schemaId = __v)
      def withLock(__v: dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock): Identity = copy(lock = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = identityId
            if (__t != "") __t else null
          }
          case 2 => createdAt.orNull
          case 3 => updatedAt.orNull
          case 4 => {
            val __t = mainIdentifier
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = schemaId
            if (__t != "") __t else null
          }
          case 6 => {
            val __t = lock.javaValueDescriptor
            if (__t.getNumber() != 0) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(identityId)
          case 2 => createdAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => updatedAt.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => _root_.scalapb.descriptors.PString(mainIdentifier)
          case 5 => _root_.scalapb.descriptors.PString(schemaId)
          case 6 => _root_.scalapb.descriptors.PEnum(lock.scalaValueDescriptor)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity.type = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity
      // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity])
  }
  
  object Identity extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity = {
      var __identityId: _root_.scala.Predef.String = ""
      var __createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var __updatedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
      var __mainIdentifier: _root_.scala.Predef.String = ""
      var __schemaId: _root_.scala.Predef.String = ""
      var __lock: dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.UNLOCKED
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __identityId = _input__.readStringRequireUtf8()
          case 18 =>
            __createdAt = Option(__createdAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 26 =>
            __updatedAt = Option(__updatedAt.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 34 =>
            __mainIdentifier = _input__.readStringRequireUtf8()
          case 42 =>
            __schemaId = _input__.readStringRequireUtf8()
          case 48 =>
            __lock = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.fromValue(_input__.readEnum())
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity(
          identityId = __identityId,
          createdAt = __createdAt,
          updatedAt = __updatedAt,
          mainIdentifier = __mainIdentifier,
          schemaId = __schemaId,
          lock = __lock,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity(
          identityId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          createdAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
          updatedAt = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
          mainIdentifier = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          schemaId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          lock = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.UNLOCKED.scalaValueDescriptor).number)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentitiesResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = dev.auth3.identity.admin.admin.GetIdentitiesResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = com.google.protobuf.timestamp.Timestamp
        case 3 => __out = com.google.protobuf.timestamp.Timestamp
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 6 => dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock
      }
    }
    lazy val defaultInstance = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity(
      identityId = "",
      createdAt = _root_.scala.None,
      updatedAt = _root_.scala.None,
      mainIdentifier = "",
      schemaId = "",
      lock = dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock.UNLOCKED
    )
    implicit class IdentityLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity](_l) {
      def identityId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.identityId)((c_, f_) => c_.copy(identityId = f_))
      def createdAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getCreatedAt)((c_, f_) => c_.copy(createdAt = Option(f_)))
      def optionalCreatedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.createdAt)((c_, f_) => c_.copy(createdAt = f_))
      def updatedAt: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getUpdatedAt)((c_, f_) => c_.copy(updatedAt = Option(f_)))
      def optionalUpdatedAt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.updatedAt)((c_, f_) => c_.copy(updatedAt = f_))
      def mainIdentifier: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.mainIdentifier)((c_, f_) => c_.copy(mainIdentifier = f_))
      def schemaId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.schemaId)((c_, f_) => c_.copy(schemaId = f_))
      def lock: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock] = field(_.lock)((c_, f_) => c_.copy(lock = f_))
    }
    final val IDENTITY_ID_FIELD_NUMBER = 1
    final val CREATED_AT_FIELD_NUMBER = 2
    final val UPDATED_AT_FIELD_NUMBER = 3
    final val MAIN_IDENTIFIER_FIELD_NUMBER = 4
    final val SCHEMA_ID_FIELD_NUMBER = 5
    final val LOCK_FIELD_NUMBER = 6
    def of(
      identityId: _root_.scala.Predef.String,
      createdAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
      updatedAt: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
      mainIdentifier: _root_.scala.Predef.String,
      schemaId: _root_.scala.Predef.String,
      lock: dev.auth3.identity.admin.admin.GetIdentitiesResponse.Lock
    ): _root_.dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity = _root_.dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity(
      identityId,
      createdAt,
      updatedAt,
      mainIdentifier,
      schemaId,
      lock
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse.Identity])
  }
  
  implicit class GetIdentitiesResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetIdentitiesResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetIdentitiesResponse](_l) {
    def identities: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity]] = field(_.identities)((c_, f_) => c_.copy(identities = f_))
    def nextPageToken: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.nextPageToken)((c_, f_) => c_.copy(nextPageToken = f_))
    def totalSize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.totalSize)((c_, f_) => c_.copy(totalSize = f_))
  }
  final val IDENTITIES_FIELD_NUMBER = 1
  final val NEXT_PAGE_TOKEN_FIELD_NUMBER = 2
  final val TOTAL_SIZE_FIELD_NUMBER = 3
  def of(
    identities: _root_.scala.Seq[dev.auth3.identity.admin.admin.GetIdentitiesResponse.Identity],
    nextPageToken: _root_.scala.Predef.String,
    totalSize: _root_.scala.Int
  ): _root_.dev.auth3.identity.admin.admin.GetIdentitiesResponse = _root_.dev.auth3.identity.admin.admin.GetIdentitiesResponse(
    identities,
    nextPageToken,
    totalSize
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetIdentitiesResponse])
}
