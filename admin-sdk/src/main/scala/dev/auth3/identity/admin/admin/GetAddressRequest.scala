// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package dev.auth3.identity.admin.admin

@SerialVersionUID(0L)
final case class GetAddressRequest(
    `match`: dev.auth3.identity.admin.admin.GetAddressRequest.Match = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetAddressRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (`match`.id.isDefined) {
        val __value = `match`.id.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (`match`.verification.isDefined) {
        val __value = `match`.verification.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      `match`.id.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      `match`.verification.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getId: _root_.scala.Predef.String = `match`.id.getOrElse("")
    def withId(__v: _root_.scala.Predef.String): GetAddressRequest = copy(`match` = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Id(__v))
    def getVerification: _root_.scala.Predef.String = `match`.verification.getOrElse("")
    def withVerification(__v: _root_.scala.Predef.String): GetAddressRequest = copy(`match` = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Verification(__v))
    def clearMatch: GetAddressRequest = copy(`match` = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Empty)
    def withMatch(__v: dev.auth3.identity.admin.admin.GetAddressRequest.Match): GetAddressRequest = copy(`match` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => `match`.id.orNull
        case 2 => `match`.verification.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => `match`.id.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => `match`.verification.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: dev.auth3.identity.admin.admin.GetAddressRequest.type = dev.auth3.identity.admin.admin.GetAddressRequest
    // @@protoc_insertion_point(GeneratedMessage[depot.devtools.auth.v0.identity.admin.GetAddressRequest])
}

object GetAddressRequest extends scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetAddressRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[dev.auth3.identity.admin.admin.GetAddressRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): dev.auth3.identity.admin.admin.GetAddressRequest = {
    var __match: dev.auth3.identity.admin.admin.GetAddressRequest.Match = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __match = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Id(_input__.readStringRequireUtf8())
        case 18 =>
          __match = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Verification(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    dev.auth3.identity.admin.admin.GetAddressRequest(
        `match` = __match,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[dev.auth3.identity.admin.admin.GetAddressRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      dev.auth3.identity.admin.admin.GetAddressRequest(
        `match` = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(dev.auth3.identity.admin.admin.GetAddressRequest.Match.Id(_))
            .orElse[dev.auth3.identity.admin.admin.GetAddressRequest.Match](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(dev.auth3.identity.admin.admin.GetAddressRequest.Match.Verification(_)))
            .getOrElse(dev.auth3.identity.admin.admin.GetAddressRequest.Match.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = AdminProto.javaDescriptor.getMessageTypes().get(34)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = AdminProto.scalaDescriptor.messages(34)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = dev.auth3.identity.admin.admin.GetAddressRequest(
    `match` = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Empty
  )
  sealed trait Match extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isId: _root_.scala.Boolean = false
    def isVerification: _root_.scala.Boolean = false
    def id: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def verification: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
  }
  object Match {
    @SerialVersionUID(0L)
    case object Empty extends dev.auth3.identity.admin.admin.GetAddressRequest.Match {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Id(value: _root_.scala.Predef.String) extends dev.auth3.identity.admin.admin.GetAddressRequest.Match {
      type ValueType = _root_.scala.Predef.String
      override def isId: _root_.scala.Boolean = true
      override def id: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Verification(value: _root_.scala.Predef.String) extends dev.auth3.identity.admin.admin.GetAddressRequest.Match {
      type ValueType = _root_.scala.Predef.String
      override def isVerification: _root_.scala.Boolean = true
      override def verification: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 2
    }
  }
  implicit class GetAddressRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetAddressRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, dev.auth3.identity.admin.admin.GetAddressRequest](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getId)((c_, f_) => c_.copy(`match` = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Id(f_)))
    def verification: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getVerification)((c_, f_) => c_.copy(`match` = dev.auth3.identity.admin.admin.GetAddressRequest.Match.Verification(f_)))
    def `match`: _root_.scalapb.lenses.Lens[UpperPB, dev.auth3.identity.admin.admin.GetAddressRequest.Match] = field(_.`match`)((c_, f_) => c_.copy(`match` = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val VERIFICATION_FIELD_NUMBER = 2
  def of(
    `match`: dev.auth3.identity.admin.admin.GetAddressRequest.Match
  ): _root_.dev.auth3.identity.admin.admin.GetAddressRequest = _root_.dev.auth3.identity.admin.admin.GetAddressRequest(
    `match`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[depot.devtools.auth.v0.identity.admin.GetAddressRequest])
}
